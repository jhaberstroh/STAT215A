setwd("~/Courses/STAT215/STAT215A-Lab2")
library(knitr)
library(ggplot2)
library(dplyr)
library(zoo)
load("redwood_data/log.Rda")
load('redwood_data/net.Rda')
load('redwood_data/locs.Rda')
locs <- filter(locs, V1 !="ID") %>%
transform(V1 = as.numeric(V1), V2=as.numeric(V2)) %>%
arrange(V1,V2)
colnames(locs) <- c("nodeid", "height.m","direction","distance","tree")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
load('redwood_data/log1.Rda')
log <- inner_join(log, locs)
# ====== clean log, complex
# Clean for negative humidities (and NA humidies, none present in log)
node.bad.all <- unique( filter(log, !(humid_temp > 0)) %>% select(nodeid) )
# Clean for NA's in humidity and temperature (node 15)
node.bad.days<- unique( filter(log, is.na(humidity) | is.na(humid_temp)) %>%
select(nodeid, time.day) )
# Clean for bad HAMATOP points (day 314)
node.bad.days<- rbind(node.bad.days,
unique( filter(log, time.day < 315) %>%
select(nodeid,time.day)) )
# Trim data that goes partway through day 343 (day of death), except in nodes that carry on.
time.day.last <- 343
node.good.long <- unique( filter(log, time.day == 344) %>% select(nodeid) )
# Apply cleaning filters
log <- filter(log, (time.day < time.day.last) |
(nodeid %in% node.good.long$nodeid))
log <- anti_join(log, node.bad.all , by=c('nodeid'))
log <- anti_join(log, node.bad.days, by=c('nodeid', 'time.day'))
log.interior <- filter(log, tree=='interior')
log.edge <- filter(log, tree=='edge')
@
<<temp_kernel1p0, cache=FALSE, echo=FALSE,dpi=100, fig.cap='Density plots with varying bandwidth' >>=
require(graphics)
attach(mtcars)
par(mfrow=c(3,1))
par(mar = rep(2,4))
p1 <- ggplot(log.edge, aes(x=humid_temp)) +
geom_density(kernel='epanechnikov', bw=1) +
ggtitle("KDA with default bandwidth")
p2 <- ggplot(log.edge, aes(x=humid_temp)) +
geom_density(kernel='epanechnikov', adjust=.2) +
ggtitle("KDA with adjust = 1/5")
p3 <- ggplot(log.edge, aes(x=humid_temp)) +
geom_density(kernel='epanechnikov', adjust=.05) +
ggtitle("KDA with adjust = 1/20")
multiplot(p1,p2,p3,cols=1)
library(graphics)
View(log.edge)
same_time <- filter(log.edge, time.dmin >=720 & time.dmin <= 720)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=720 & time.dmin <= 750)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=700 & time.dmin <= 750)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=500 & time.dmin <= 750)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=500 & time.dmin <= 500)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=800 & time.dmin <= 800)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=800 & time.dmin <= 840)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity))
remove(same_time)
same_time <- filter(log.edge, time.dmin >=800 & time.dmin <= 840)
ggplot(same_time) +
geom_point(aes(x=humid_temp, y=humidity), alpha=.5)
remove(same_time)
ggplot(same_time, aes(x=humid_temp, y=humidity)) +
geom_point(alpha=.5) +
stat_smooth(method='loess', formula = x ~ y)
remove(same_time)
same_time <- filter(log.edge, time.dmin >=800 & time.dmin <= 840)
ggplot(same_time, aes(x=humid_temp, y=humidity)) +
geom_point(alpha=.5) +
stat_smooth(method='loess', formula = x ~ y)
ggplot(same_time, aes(humid_temp, humidity)) +
geom_point(alpha=.5) +
stat_smooth(method='loess', formula = x ~ y)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', formula = x ~ y)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', formula = x ~ y)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess')
geom_point(alpha=.5) +
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess') +
geom_point(alpha=.5)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess') +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.1) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.9) +
geom_point(alpha=.2)
remove(same_time)
same_time <- filter(log.edge, time.dmin >=800 & time.dmin <= 840)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=1.3) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.3) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.3, formula = y ~ x) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.3, formula = y ~ poly(x,3)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.3, formula = y ~ poly(x,2)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=.3, formula = y ~ poly(x,1)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=1, formula = y ~ poly(x,2)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=1, formula = y ~ poly(x,3)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=3, formula = y ~ poly(x,3)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=2, formula = y ~ poly(x,3)) +
geom_point(alpha=.2)
ggplot(same_time, aes(humid_temp, humidity)) +
stat_smooth(method='loess', span=5, formula = y ~ poly(x,3)) +
geom_point(alpha=.2)
